import{_ as a,c as t,a as e,b as o,t as n,d as p,o as l}from"./app.9d3ed004.js";const A=JSON.parse('{"title":"How do i keep my repository updated?","description":"","frontmatter":{"title":"How do i keep my repository updated?","order":0},"headers":[],"relativePath":"intro/how-do-i/keep-my-repo-updated.md","lastUpdated":1675421497000}'),r={name:"intro/how-do-i/keep-my-repo-updated.md"},c={id:"frontmatter-title",tabindex:"-1"},i=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=p(`<p>Actually to pull the latest changes your repository, you&#39;ll need to have Stuyks Upstream (Athena) as a remote in your repository.</p><p>The process of setting git remotes is explained in the installation section of the documentation.</p><p>To pull the latest changes to your current branch you&#39;d have to write</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">git pull upstream </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">branch</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>An valid example would look like this:</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">git pull upstream master</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull upstream </span><span style="color:#F78C6C;">3.9</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span></code></pre></div><p>You can also fetch all current remote branches by just typing</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">git fetch upstream </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">all</span></span>
<span class="line"></span></code></pre></div><p>But you also need to be aware of the merge markers. If you&#39;re using Visual Studio Code it will show you the merge markers.</p><p>There you have an choice to accept incoming changes or your own changes instead of the incoming changes.</p>`,10);function u(s,y,h,m,g,_){return l(),t("div",null,[e("h1",c,[o(n(s.$frontmatter.title)+" ",1),i]),d])}const D=a(r,[["render",u]]);export{A as __pageData,D as default};
