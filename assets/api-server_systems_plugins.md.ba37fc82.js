import{_ as n,c as e,a as s,b as l,t,d as p,o}from"./app.c8ecc363.js";const _=JSON.parse('{"title":".plugins","description":"","frontmatter":{"title":".plugins","order":-99},"headers":[],"relativePath":"api-server/systems/plugins.md","lastUpdated":1675421894000}'),r={name:"api-server/systems/plugins.md"},c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),D=p(`<p>A system used to register plugins for initialization during runtime.</p><h2 id="registerplugin" tabindex="-1">registerPlugin <a class="header-anchor" href="#registerplugin" aria-hidden="true">#</a></h2><p>Used to register a plugin.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">systems</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">registerPlugin</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">My Cool Plugin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Call other init functions here for your plugin.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="getplugins" tabindex="-1">getPlugins <a class="header-anchor" href="#getplugins" aria-hidden="true">#</a></h2><p>Returns all plugin names.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> plugins </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">systems</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlugins</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(plugins)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,7);function y(a,d,A,g,u,F){return o(),e("div",null,[s("h1",c,[l(t(a.$frontmatter.title)+" ",1),i]),D])}const h=n(r,[["render",y]]);export{_ as __pageData,h as default};
