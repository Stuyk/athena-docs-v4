import{_ as n,c as t,a as s,b as l,t as e,d as p,o}from"./app.c8ecc363.js";const u=JSON.parse('{"title":".staticText","description":"","frontmatter":{"title":".staticText","order":-99},"headers":[],"relativePath":"api-client/rmlui/staticText.md","lastUpdated":1675421894000}'),c={name:"api-client/rmlui/staticText.md"},r={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),D=p(`<p>This is static text that can be rendered in-world.</p><p>Scales automatically based on player position.</p><p><img src="https://i.imgur.com/CmMDLtM.png" alt=""></p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><ul><li>Static Text Interface</li></ul><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">AthenaClient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rmlui</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">staticText</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">upsert</span><span style="color:#A6ACCD;">(staticTextInterface): </span><span style="color:#89DDFF;">void;</span></span>
<span class="line"></span></code></pre></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">AthenaClient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rmlui</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">staticText</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">upsert</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">distance</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> alt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Player</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">local</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pos</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">uid</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,8);function y(a,F,d,A,C,h){return o(),t("div",null,[s("h1",r,[l(e(a.$frontmatter.title)+" ",1),i]),D])}const m=n(c,[["render",y]]);export{u as __pageData,m as default};
