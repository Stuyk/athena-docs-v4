import{_ as n,c as e,a as s,b as l,t as o,d as p,o as t}from"./app.310de484.js";const _=JSON.parse('{"title":".vehicle","description":"","frontmatter":{"title":".vehicle","order":-99},"headers":[],"relativePath":"api-server/events/vehicle.md","lastUpdated":1675421297000}'),c={name:"api-server/events/vehicle.md"},r={id:"frontmatter-title",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),F=p(`<p>These are Athena specific events for vehicles.</p><h2 id="event-names" tabindex="-1">Event Names <a class="header-anchor" href="#event-names" aria-hidden="true">#</a></h2><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ATHENA_EVENTS_VEHICLE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    DESPAWNED </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleDespawned</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    ENGINE_STATE_CHANGE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleEngineState</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    LOCK_STATE_CHANGE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleLockState</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    REPAIRED </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleRepaired</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    SPAWNED </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleSpawned</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    DISTANCE_TRAVELED </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:DistanceTraveled</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    DESTROYED </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">athena:VehicleDestroyed</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><strong>Usage:</strong> <code>ATHENA_EVENTS_VEHICLE.DESPAWNED</code></p><ul><li>DESPAWNED -&gt; When a vehicle is despawned.</li><li>ENGINE_STATE_CHANGE -&gt; When a vehicle is turned on or off.</li><li>LOCK_STATE_CHANGE -&gt; When a vehicle&#39;s lock state has changed.</li><li>REPAIRED -&gt; When a vehicle is repaired.</li><li>SPAWNED -&gt; When a vehicle is spawned from a garage, or anywhere else.</li><li>DISTANCE_TRAVELED -&gt; When a vehicle has moved some distance. Third argument is distance count.</li><li>DESTROYED -&gt; When a vehicle is blown up, destroyed, etc.</li></ul><h2 id="trigger" tabindex="-1">trigger <a class="header-anchor" href="#trigger" aria-hidden="true">#</a></h2><p>Used to force an invoke of a specific vehicle event by name.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">events</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vehicle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trigger</span><span style="color:#A6ACCD;">(ATHENA_EVENTS_VEHICLE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DESPAWNED</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> someVehicle)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="on" tabindex="-1">on <a class="header-anchor" href="#on" aria-hidden="true">#</a></h2><p>Used to listen for a specific vehicle event to occur.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">events</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">vehicle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(ATHENA_EVENTS_VEHICLE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DISTANCE_TRAVELED</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">someVehicle</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">alt</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Vehicle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">dist</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Some Vehicle Traveled... </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">dist</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> ...distance</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,11);function i(a,y,A,C,h,d){return t(),e("div",null,[s("h1",r,[l(o(a.$frontmatter.title)+" ",1),D]),F])}const v=n(c,[["render",i]]);export{_ as __pageData,v as default};
